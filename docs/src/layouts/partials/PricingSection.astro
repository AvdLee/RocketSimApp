---
import { markdownify } from "@/lib/utils/textConverter";
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";

import config from "src/config/config.json";

const { isPageHeader } = Astro.props;
const sectionData = (await getEntry(
  "pricingSectionCollection",
  "pricing",
)) as CollectionEntry<"pricingSectionCollection">;
const { title, plans } = sectionData.data;

const teamsUrl =
  import.meta.env.MODE === "production"
    ? config.site.teams_base_url
    : "http://localhost:5173";

// TODO: Update this URL to the correct payment link for your production environment
const stripePaymentLink =
  import.meta.env.MODE === "production"
    ? "https://nieknijland.nl"
    : "https://billing.rocketsim.app/b/test_28E7sKbaS8OK6UD4jlc7u00";
---

<section class={isPageHeader ? "" : "section"} id="plans">
  <div class="container">
    <div class="section-container">
      <div class="section-intro centralize">
        <!-- Header Area -->
        {
          !isPageHeader && (
            <h2
              class="title hasEmphasize"
              data-aos=""
              set:html={markdownify(title)}
            />
          )
        }
      </div>
      <div class="section-content">
        <div data-aos="fade-up-sm">
          <div
            class="grid md:grid-cols-2 xl:grid-cols-4 justify-center max-xl:gap-6 xl:shadow-[0_1px_40px_0_rgba(64,145,247,0.05),0_0_16px_-7px_rgba(64,145,247,0.05),0_2px_40px_10px_rgba(64,145,247,0.05),inset_0_1px_1px_0_hsla(0,0%,100%,0.1)]"
          >
            {
              plans &&
                plans.length &&
                plans.map((plan) => {
                  return (
                    <div
                      class:list={[
                        "p-8 pb-6 flex flex-col justify-between h-full relative transition-shadow duration-300 bg-black-accent border border-[color:hsla(0,0%,100%,.06))] shadow-[inset_0_1px_0_0_hsla(0,0%,100%,.1)] max-xl:rounded-2xl xl:nth-of-type-1:rounded-tl-2xl xl:nth-of-type-4:rounded-br-2xl xl:nth-of-type-1:rounded-bl-2xl xl:nth-of-type-4:rounded-tr-2xl bg-[linear-gradient(to_bottom,rgba(0,0,0,0.7)_-17%,rgba(64,145,247,0.25)_11%,rgba(0,0,0,0.7)_46%)] max-xl:shadow-[0_1px_40px_0_rgba(64,145,247,0.05),0_0_16px_-7px_rgba(64,145,247,0.05),0_2px_40px_10px_rgba(64,145,247,0.05),inset_0_1px_1px_0_hsla(0,0%,100%,0.1)]",
                      ]}
                    >
                      <div>
                        <div class="lg:min-h-[13rem] xl:min-h-[15rem]">
                          <span
                            class="h6 mb-2 inline-block text-white"
                            set:html={markdownify(plan.title)}
                          />
                          {/* PRICE NUMBERS */}
                          <div class="flex items-baseline gap-2 mb-2">
                            <h3 class="flex items-center text-text-dark text-h2">
                              <span>{plan.price_prefix}</span>
                              <span
                                class="data-count"
                                data-count-yearly={plan.price.yearly.amount}
                                set:html={plan.price.yearly.amount}
                              />
                            </h3>
                            <div class="flex flex-col gap-1 text-text">
                              <span class="text-yearly">
                                {plan.price.yearly.period}
                              </span>
                            </div>
                          </div>
                          <div class="mb-6 h-4">
                            {plan.price.yearly.note ? (
                              <p
                                class="text-text text-sm"
                                set:html={markdownify(plan.price.yearly.note)}
                              />
                            ) : null}
                          </div>
                          <p
                            class="text-text "
                            set:html={markdownify(plan.description)}
                          />
                        </div>
                        <hr class:list={["my-14 border-text-dark/20"]} />
                        <ul class="flex flex-col gap-5">
                          {plan.features &&
                            plan.features.length &&
                            plan.features
                              .filter((filter) => filter.enable)
                              .map((feature) => {
                                const isIncluded = feature.included;
                                return (
                                  <li class="flex items-start gap-x-5 text-text-dark leading-tight">
                                    {!isIncluded ? (
                                      <svg
                                        width="24"
                                        height="24"
                                        viewBox="0 0 24 24"
                                        fill="none"
                                        class="text-text-light w-full max-w-6 aspect-square "
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <g opacity="0.4">
                                          <path
                                            fill-rule="evenodd"
                                            clip-rule="evenodd"
                                            d="M1.5 12C1.5 6.20101 6.20101 1.5 12 1.5C17.799 1.5 22.5 6.20101 22.5 12C22.5 17.799 17.799 22.5 12 22.5C6.20101 22.5 1.5 17.799 1.5 12ZM9.87896 8.81803C9.58607 8.52513 9.1112 8.52513 8.8183 8.81803C8.52541 9.11092 8.52541 9.5858 8.8183 9.87869L10.9396 12L8.81831 14.1213C8.52542 14.4142 8.52542 14.8891 8.81831 15.182C9.1112 15.4749 9.58608 15.4749 9.87897 15.182L12.0003 13.0607L14.1216 15.182C14.4145 15.4749 14.8894 15.4749 15.1823 15.182C15.4752 14.8891 15.4752 14.4142 15.1823 14.1213L13.0609 12L15.1823 9.87869C15.4752 9.5858 15.4752 9.11092 15.1823 8.81803C14.8894 8.52513 14.4145 8.52513 14.1216 8.81803L12.0003 10.9394L9.87896 8.81803Z"
                                            fill="currentColor"
                                          />
                                        </g>
                                      </svg>
                                    ) : (
                                      <svg
                                        width="24"
                                        height="24"
                                        viewBox="0 0 24 24"
                                        fill="none"
                                        class="text-primary  w-full max-w-6 aspect-square"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          fill-rule="evenodd"
                                          clip-rule="evenodd"
                                          d="M1.5 12C1.5 6.20101 6.20101 1.5 12 1.5C17.799 1.5 22.5 6.20101 22.5 12C22.5 17.799 17.799 22.5 12 22.5C6.20101 22.5 1.5 17.799 1.5 12ZM15.7127 10.7197C16.0055 10.4268 16.0055 9.95192 15.7127 9.65903C15.4198 9.36614 14.9449 9.36614 14.652 9.65903L10.9397 13.3713L9.34869 11.7804C9.0558 11.4875 8.58092 11.4875 8.28803 11.7804C7.99514 12.0732 7.99514 12.5481 8.28803 12.841L10.4093 14.9623C10.7022 15.2552 11.1771 15.2552 11.47 14.9623L15.7127 10.7197Z"
                                          fill="currentColor"
                                        />
                                      </svg>
                                    )}

                                    <span
                                      class={`${isIncluded ? "text-text-dark" : "text-text-light"}`}
                                    >
                                      {feature.feature}
                                    </span>
                                  </li>
                                );
                              })}
                        </ul>
                      </div>

                      <div>
                        {/* CTA BUTTON */}
                        {plan.cta.enable && (
                          <a
                            href={
                              plan.cta.site === "custom"
                                ? plan.cta.link
                                : `${plan.cta.site === "teams" ? teamsUrl : ""}${plan.cta.link}`
                            }
                            class:list={[
                              "btn py-2 w-full inline-block self-start mt-14 text-center rounded-full btn-primary",
                              plan.cta.class,
                            ]}
                          >
                            <span>{plan.cta.label}</span>
                          </a>
                        )}
                        <div class="min-h-6 text-center">
                          {plan.title === "Teams" ? (
                            <span class="text-xs">
                              or skip trial and{" "}
                              <a href={stripePaymentLink}>pay now</a>
                            </span>
                          ) : null}
                        </div>
                      </div>
                    </div>
                  );
                })
            }
          </div>
        </div>
      </div>
    </div>
  </div>
</section>
